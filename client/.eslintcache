[{"/home/mikkybang/Documents/pure-html-css-js-learn/web-RTC/client/src/reportWebVitals.js":"1","/home/mikkybang/Documents/pure-html-css-js-learn/web-RTC/client/src/App.js":"2"},{"size":362,"mtime":1608096756740,"results":"3","hashOfConfig":"4"},{"size":2532,"mtime":1608136364451,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"aoh9vs",{"filePath":"8","messages":"9","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/mikkybang/Documents/pure-html-css-js-learn/web-RTC/client/src/reportWebVitals.js",[],"/home/mikkybang/Documents/pure-html-css-js-learn/web-RTC/client/src/App.js",["10","11","12","13","14"],{"ruleId":"15","severity":1,"message":"16","line":1,"column":28,"nodeType":"17","messageId":"18","endLine":1,"endColumn":34},{"ruleId":"15","severity":1,"message":"19","line":1,"column":36,"nodeType":"17","messageId":"18","endLine":1,"endColumn":44},{"ruleId":"15","severity":1,"message":"20","line":2,"column":8,"nodeType":"17","messageId":"18","endLine":2,"endColumn":12},{"ruleId":"15","severity":1,"message":"21","line":3,"column":8,"nodeType":"17","messageId":"18","endLine":3,"endColumn":12},{"ruleId":"22","severity":1,"message":"23","line":24,"column":14,"nodeType":"24","endLine":24,"endColumn":57},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'logo' is defined but never used.","'Peer' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'socket' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression"]
[{"/home/mikkybang/Documents/pure-html-css-js-learn/web-RTC/client/src/reportWebVitals.js":"1","/home/mikkybang/Documents/pure-html-css-js-learn/web-RTC/client/src/App.js":"2","/home/mikkybang/Documents/pure-html-css-js-learn/web-RTC/client/src/socket.js":"3"},{"size":362,"mtime":1608096756740,"results":"4","hashOfConfig":"5"},{"size":1950,"mtime":1608129235824,"results":"6","hashOfConfig":"5"},{"size":162,"mtime":1608128977832,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"aoh9vs",{"filePath":"10","messages":"11","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mikkybang/Documents/pure-html-css-js-learn/web-RTC/client/src/reportWebVitals.js",[],"/home/mikkybang/Documents/pure-html-css-js-learn/web-RTC/client/src/App.js",["15","16","17","18","19","20","21","22","23","24","25","26"],"import React, { useEffect, useRef, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport Peer from \"simple-peer\";\nimport \"./App.css\";\n\nimport { socketConnection } from \"./socket\";\n\nfunction App() {\n  const [stream, setSteam] = useState();\n  const [yourId, setYourId] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [receivingCall, setRecevingCall] = useState(false);\n  const [caller, setCaller] = useState(\"\");\n  const [callerSignal, setCallerSignal] = useState();\n  const [callAccepted, setCallAccepted] = useState(false);\n\n  const userVideo = useRef();\n  const partnerVideo = useRef();\n  const socket = useRef();\n\n  useEffect(() => {\n    socket.current = socketConnection;\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: true })\n      .then((stream) => {\n        setSteam(stream);\n        if (userVideo.current) {\n          userVideo.current.srcObject = stream;\n        }\n      })\n      .catch((err) => {\n        console.log(\"Could not get media stream\");\n      });\n\n    socket.current.on(\"connect\", (socket) => {\n      console.log(\"Client socket connected\");\n    });\n\n    socket.current.on(\"yourId\", (id) => {\n      setYourId(id);\n    });\n\n    socket.current.on(\"users\", (data) => {\n      console.log(data.users);\n      setUsers(data.users);\n    });\n  }, []);\n\n  let UserVideo;\n  if (stream) {\n    UserVideo = <video playsInline muted ref={userVideo} autoPlay></video>;\n  }\n  let PartnerVideo;\n  if (callAccepted) {\n    PartnerVideo = (\n      <video playsInline muted ref={partnerVideo} autoPlay></video>\n    );\n  }\n\n  const callPeer = (key) => {};\n\n  const acceptCall = () => {};\n\n  return (\n    <div className=\"App\">\n      <div className=\"video-wrapper\">\n        {UserVideo}\n        {PartnerVideo}\n      </div>\n\n      {users.map((key) => {\n        if (key == yourId) {\n          return null;\n        }\n        return <button> call {key} </button>;\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","/home/mikkybang/Documents/pure-html-css-js-learn/web-RTC/client/src/socket.js",[],{"ruleId":"27","severity":1,"message":"28","line":2,"column":8,"nodeType":"29","messageId":"30","endLine":2,"endColumn":12},{"ruleId":"27","severity":1,"message":"31","line":3,"column":8,"nodeType":"29","messageId":"30","endLine":3,"endColumn":12},{"ruleId":"27","severity":1,"message":"32","line":12,"column":10,"nodeType":"29","messageId":"30","endLine":12,"endColumn":23},{"ruleId":"27","severity":1,"message":"33","line":12,"column":25,"nodeType":"29","messageId":"30","endLine":12,"endColumn":40},{"ruleId":"27","severity":1,"message":"34","line":13,"column":10,"nodeType":"29","messageId":"30","endLine":13,"endColumn":16},{"ruleId":"27","severity":1,"message":"35","line":13,"column":18,"nodeType":"29","messageId":"30","endLine":13,"endColumn":27},{"ruleId":"27","severity":1,"message":"36","line":14,"column":10,"nodeType":"29","messageId":"30","endLine":14,"endColumn":22},{"ruleId":"27","severity":1,"message":"37","line":14,"column":24,"nodeType":"29","messageId":"30","endLine":14,"endColumn":39},{"ruleId":"27","severity":1,"message":"38","line":15,"column":24,"nodeType":"29","messageId":"30","endLine":15,"endColumn":39},{"ruleId":"27","severity":1,"message":"39","line":60,"column":9,"nodeType":"29","messageId":"30","endLine":60,"endColumn":17},{"ruleId":"27","severity":1,"message":"40","line":62,"column":9,"nodeType":"29","messageId":"30","endLine":62,"endColumn":19},{"ruleId":"41","severity":1,"message":"42","line":72,"column":17,"nodeType":"43","messageId":"44","endLine":72,"endColumn":19},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Peer' is defined but never used.","'receivingCall' is assigned a value but never used.","'setRecevingCall' is assigned a value but never used.","'caller' is assigned a value but never used.","'setCaller' is assigned a value but never used.","'callerSignal' is assigned a value but never used.","'setCallerSignal' is assigned a value but never used.","'setCallAccepted' is assigned a value but never used.","'callPeer' is assigned a value but never used.","'acceptCall' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]